'Exp')],
df2[c('Round',
'DLIndex',
'Consistency',
'Consistency_LEAD1',
'Category',
'Score',
'Score_LAG1',
'Dif_consist',
'Joint_LAG1',
'Similarity_LAG1',
'Exp')],
df3[c('Round',
'DLIndex',
'Consistency',
'Consistency_LEAD1',
'Category',
'Score',
'Score_LAG1',
'Dif_consist',
'Joint_LAG1',
'Similarity_LAG1',
'Exp')]
)
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c(labeldf1, labeldf2, labeldf3))
labeldf1 <- "MBiases"
labeldf2 <- "WSLS"
labeldf3 <- "FRA"
colordf1 <- cbPalette[4]
colordf2 <- cbPalette[5]
colordf3 <- cbPalette[7]
df$Exp <- as.factor(df$Exp)
df$Exp <- factor(df$Exp, levels = c(labeldf1, labeldf2, labeldf3))
df$ScoreLAG_ordinal <- cut(df$Score_LAG1,
breaks = c(-200, 15, 28, 32),
labels = c("low", "moderate", "high")
)
g2 <- ggplot(df, aes(x=ScoreLAG_ordinal, y=Consistency, group=Exp, fill=Exp)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g2
g2 <- ggplot(df, aes(x=ScoreLAG_ordinal, y=Consistency, group=Exp)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g2
g2 <- ggplot(df, aes(x=ScoreLAG_ordinal, y=Consistency, fill=Exp)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g2
df <- df[complete.cases(df), ]
g2 <- ggplot(df, aes(x=ScoreLAG_ordinal, y=Consistency, fill=Exp)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g2
source("Model_Plots.R")
archivo <- "../Data/MBiases_simulated.csv"
df1 = read.csv(archivo)
df1$Exp <- as.character("MBiases")
df1$Region <- df1$Category
archivo <- "../Data/WSLS_simulated.csv"
df2 = read.csv(archivo)
df2$Exp <- as.character("WSLS")
df2$Region <- df2$Category
archivo <- "../Data/FRA_simulated.csv"
df3 = read.csv(archivo)
df3$Exp <- as.character("FRA")
df3$Region <- df3$Category
p <- plot_3set_comparison_WSLS(df1, df2, df3)
source("Model_Plots.R")
archivo <- "../Data/MBiases_simulated.csv"
df1 = read.csv(archivo)
df1$Exp <- as.character("MBiases")
df1$Region <- df1$Category
archivo <- "../Data/WSLS_simulated.csv"
df2 = read.csv(archivo)
df2$Exp <- as.character("WSLS")
df2$Region <- df2$Category
archivo <- "../Data/FRA_simulated.csv"
df3 = read.csv(archivo)
df3$Exp <- as.character("FRA")
df3$Region <- df3$Category
p <- plot_3set_comparison_WSLS(df1, df2, df3)
source("Model_Plots.R")
p <- plot_3set_comparison_WSLS(df1, df2, df3)
ggsave("3models.png", width=5, height=4, dpi=600, p)
setwd("~/Repositorios/SODCL/R")
library(sjmisc)
library(ggplot2)
library(foreign)
library(MASS)
library(gridExtra)
df1 = read.csv("../Data/humans_only_absent.csv")
df1 <- df1[complete.cases(df1), ]
# Pearson correlation
cor(df1$Consistency, df1$Score_LAG1) # => 0.23
length(df1$Consistency)
dof <- length(df1$Consistency) - 2
dof
# Pearson correlation
cor.test(df1$Consistency, df1$Score_LAG1) # => 0.23
# Pearson correlation
cor.test(df1$Consistency, df1$Score_LAG1) # => 0.23
g1 <- ggplot(df1, aes(Score_LAG1, Consistency)) +
geom_point(alpha = 1/8) +
theme_bw() +
xlab("Score(n-1)") +
ylab("Consistency(n)") +
stat_smooth(method='lm', formula = y~poly(x,1))
g1
## Cutting the Consistency variable into three levels
summary(df1$Consistency)
g2 <- ggplot(df1, aes(Consistency)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Consistency") +
theme_bw()
g2
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(0, 0.31, 0.86, 1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
## Cutting the Score_LAG1 variable into three levels
summary(df1$Score_LAG1)
g3 <- ggplot(df1, aes(Score_LAG1)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Score on previous round") +
theme_bw()
g3
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-200, 15, 28, 32),
labels = c("low", "moderate", "high")
)
## Drawing boxplot
g4 <- boxplot(df1$Score_LAG1~df1$Consistency_ordinal,
xlab="Consistency",
ylab="Score on previous round"
)
g4
g5 <- ggplot(df1, aes(x=ScoreLAG_ordinal, y=Consistency)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g5
## Drawing boxplot
g4 <- boxplot(df1$Score_LAG1~df1$Consistency_ordinal,
xlab="Consistency",
ylab="Score on previous round"
)
g4
## Drawing boxplot
g5 <- ggplot(df1, aes(x=ScoreLAG_ordinal, y=Consistency)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g5
## Cutting the Score_LAG1 variable into three levels
summary(df1$Score_LAG1)
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-129, 15, 28, 32),
labels = c("low", "moderate", "high")
)
## Cutting the Consistency variable into three levels
summary(df1$Consistency)
g4 <- ggplot(df1, aes(Consistency)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Consistency") +
theme_bw()
g4
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(0, 0.31, 0.86, 1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
# Running an Ordinal Logistic Regression
m <- polr(Consistency_ordinal ~ ScoreLAG_ordinal, data = df1)
summary(m)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
chisq.test(tbl)
# Running an Ordinal Logistic Regression
m <- polr(Consistency_ordinal ~ ScoreLAG_ordinal, data = df1)
summary(m)
## store table
(ctable <- coef(summary(m)))
## calculate and store p values
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
(ctable <- cbind(ctable, "p value" = p))
source("MODELpred.R")
df1 = read.csv("../Data/performances.csv")
head(df1)
df1 <- find_regionVector(df1)
df1$Size_visited <- sapply(df1$vR, function(x) {
lista <- unlist(x)
return(sum(lista))
})
df1$Is_there_LAG <- lag(df1$Is_there)
df <- data.frame(df1$Is_there_LAG, df1$Is_there, df1$Size_visited)
df <- df[complete.cases(df), ]
head(df)
df_present <- df[which(df$df1.Is_there_LAG == 'Unicorn_Present'), ]
df_present <- df_present[which(df_present$df1.Is_there == 'Unicorn_Absent'), ]
df_present$Exp <- "present"
df_absent <- df[which(df$df1.Is_there_LAG == 'Unicorn_Absent'), ]
df_absent <- df_absent[which(df_absent$df1.Is_there == 'Unicorn_Absent'), ]
df_absent$Exp <- "absent"
av_present <- mean(df_present$df1.Size_visited)
av_absent <- mean(df_absent$df1.Size_visited)
av_present
av_absent
wilcox.test(df_present$df1.Size_visited, df_absent$df1.Size_visited) # => Difference size visited after present vs after absent is significant
av_present_sd <- sd(df_present$df1.Size_visited)
av_present <- mean(df_present$df1.Size_visited)
av_present_sd <- sd(df_present$df1.Size_visited)
av_present
av_present_sd
av_absent <- mean(df_absent$df1.Size_visited)
av_absent_sd <- sd(df_absent$df1.Size_visited)
av_absent
av_absent_sd
wilcox.test(df_present$df1.Size_visited, df_absent$df1.Size_visited) # => Difference size visited after present vs after absent is significant
library(gridExtra)
library(sjmisc)
library(ggplot2)
df1 = read.csv("../Data/humans_only_absent.csv")
head(df1)
# Check the performance on the first round, as if one-shot task
DLIRound60 <- df1$DLIndex[which(df1$Round == 59)]
mean(DLIRound60)
sd(DLIRound60)
n <- length(DLIRound60)
print(paste("Number of trials last round:", n))
DLIRound1 <- df1$DLIndex[which(df1$Round == 1)]
mean(DLIRound1)
sd(DLIRound1)
n <- length(DLIRound1)
print(paste("Number of trials first round:", n))
wilcox.test(DLIRound60, DLIRound1) # => Difference one-shot task vs iterated task is significant
DLIRound60 <- data.frame(DLIRound60)
names(DLIRound60)[1] <- "DLIndex"
DLIRound60$Exp <- as.character("Last")
DLIRound1 <- data.frame(DLIRound1)
names(DLIRound1)[1] <- "DLIndex"
DLIRound1$Exp <- as.character("First")
df <- rbind(DLIRound1, DLIRound60)
# Density plot
g2 <- ggplot(df, aes(DLIndex, colour=Exp, group=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Last" = "#E69F00", "First" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
scale_y_continuous(position = "right") +
labs(color = "Round") +
theme_bw() +
theme(legend.position="bottom")
g2
library(sjmisc)
library(ggplot2)
df1 = read.csv("../Data/humans_only_absent.csv")
df1 <- df1[complete.cases(df1), ]
# Regressing Consistency w.r.t. max similarity to focal region
model4h <- lm(Consistency ~ Similarity_LAG1, data = df1)
summary(model4h) # => Positive correlation is significant
g3 <- ggplot(df1, aes(Similarity_LAG1, Consistency)) +
geom_point(alpha = 1/8) +
theme_bw() +
xlab("Max similarity w.r.t.\nfocal regions on Round n-1") +
ylab("Consistency on Round n") +
geom_smooth(method = lm)
g3
length(df1$Consistency)
library(sjmisc)
library(ggplot2)
library(foreign)
library(MASS)
library(gridExtra)
df1 = read.csv("../Data/humans_only_absent.csv")
df1 <- df1[complete.cases(df1), ]
# Pearson correlation
cor.test(df1$Consistency, df1$Score_LAG1) # => 0.23
## Cutting the Score_LAG1 variable into three levels
summary(df1$Score_LAG1)
g2 <- ggplot(df1, aes(Score_LAG1)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Score on previous round") +
theme_bw()
g2
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-129, 15, 28, 32),
labels = c("low", "moderate", "high")
)
length(df1[df1$ScoreLAG_ordinal=="low"])
length(df1[df1$ScoreLAG_ordinal=="low",])
length(df1[df1$ScoreLAG_ordinal=="low",])
length(df1[df1$ScoreLAG_ordinal=="moderate",])
length(df1[df1$ScoreLAG_ordinal=="high",])
length(df1[,df1$ScoreLAG_ordinal=="low"])
length(df1[,df1$ScoreLAG_ordinal=="low"])
length(df1[df1$ScoreLAG_ordinal=="low"])
length(df1[df1$ScoreLAG_ordinal=="low"]$ScoreLag_ordinal)
length(df1[df1$ScoreLAG_ordinal=="low",]$ScoreLag_ordinal)
df1[df1$ScoreLAG_ordinal=="low",]
low_score <- df1[df1$ScoreLAG_ordinal=="low",]
length(low_score$ScoreLAG_ordinal)
moderate_score <- df1[df1$ScoreLAG_ordinal=="moderate",]
length(moderate_score$ScoreLAG_ordinal)
high_score <- df1[df1$ScoreLAG_ordinal=="high",]
length(high_score$ScoreLAG_ordinal)
## Drawing boxplot
g3 <- ggplot(df1, aes(x=ScoreLAG_ordinal, y=Consistency)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g3
## Cutting the Consistency variable into three levels
summary(df1$Consistency)
g4 <- ggplot(df1, aes(Consistency)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Consistency") +
theme_bw()
g4
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(0, 0.31, 0.86, 1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-129, 15, 28, 32),
labels = c("low", "moderate", "high")
)
low_score <- df1[df1$ScoreLAG_ordinal=="low",]
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-129, 15, 28, 32),
labels = c("low", "moderate", "high")
)
low_score <- df1[df1$ScoreLAG_ordinal=="low",]
length(low_score$ScoreLAG_ordinal)
moderate_score <- df1[df1$ScoreLAG_ordinal=="moderate",]
length(moderate_score$ScoreLAG_ordinal)
high_score <- df1[df1$ScoreLAG_ordinal=="high",]
length(high_score$ScoreLAG_ordinal)
## Drawing boxplot
g3 <- ggplot(df1, aes(x=ScoreLAG_ordinal, y=Consistency)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g3
## Cutting the Consistency variable into three levels
summary(df1$Consistency)
g4 <- ggplot(df1, aes(Consistency)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Consistency") +
theme_bw()
g4
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(0, 0.31, 0.86, 1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
low_score <- df1[df1$ScoreLAG_ordinal=="low",]
length(low_score$ScoreLAG_ordinal)
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(-0.1, 0.31, 0.86, 1.1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
df1$ScoreLAG_ordinal <- cut(df1$Score_LAG1,
breaks = c(-129, 15, 28, 33),
labels = c("low", "moderate", "high")
)
low_score <- df1[df1$ScoreLAG_ordinal=="low",]
length(low_score$ScoreLAG_ordinal)
moderate_score <- df1[df1$ScoreLAG_ordinal=="moderate",]
length(moderate_score$ScoreLAG_ordinal)
high_score <- df1[df1$ScoreLAG_ordinal=="high",]
length(high_score$ScoreLAG_ordinal)
## Drawing boxplot
g3 <- ggplot(df1, aes(x=ScoreLAG_ordinal, y=Consistency)) +
geom_boxplot(notch=FALSE) +
labs(x="Score on previous round", y = "Consistency") +
theme_bw()
g3
## Cutting the Consistency variable into three levels
summary(df1$Consistency)
g4 <- ggplot(df1, aes(Consistency)) +
geom_density(size=1) +
#  scale_y_continuous(limits = c(0, 5)) +
xlab("Consistency") +
theme_bw()
g4
df1$Consistency_ordinal <- cut(df1$Consistency,
breaks = c(-0.1, 0.31, 0.86, 1.1),
labels = c("inconsistent", "moderately consistent", "consistent")
)
tbl <- table(df1$ScoreLAG_ordinal, df1$Consistency_ordinal)
tbl
chisq.test(tbl)
# Running an Ordinal Logistic Regression
m <- polr(Consistency_ordinal ~ ScoreLAG_ordinal, data = df1)
summary(m)
## store table
(ctable <- coef(summary(m)))
## calculate and store p values
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
(ctable <- cbind(ctable, "p value" = p))
df1 = read.csv("../Data/humans_only_absent.csv")
df1 <- df1[complete.cases(df1), ]
# Regressing Consistency w.r.t. max similarity to focal region
model4h <- lm(Consistency ~ Similarity_LAG1, data = df1)
summary(model4h) # => Positive correlation is significant
length(df1$Consistency)
source("Model_Plots.R")
archivo <- "../Data/MBiases_simulated.csv"
df1 = read.csv(archivo)
df1$Exp <- as.character("MBiases")
df1$Region <- df1$Category
archivo <- "../Data/WSLS_simulated.csv"
df2 = read.csv(archivo)
df2$Exp <- as.character("WSLS")
df2$Region <- df2$Category
archivo <- "../Data/FRA_simulated.csv"
df3 = read.csv(archivo)
df3$Exp <- as.character("FRA")
df3$Region <- df3$Category
p <- plot_3set_comparison_WSLS(df1, df2, df3)
source("Model_Plots.R")
archivo <- "../Data/MBiases_simulated.csv"
df1 = read.csv(archivo)
df1$Exp <- as.character("MBiases")
df1$Region <- df1$Category
archivo <- "../Data/WSLS_simulated.csv"
df2 = read.csv(archivo)
df2$Exp <- as.character("WSLS")
df2$Region <- df2$Category
archivo <- "../Data/FRA_simulated.csv"
df3 = read.csv(archivo)
df3$Exp <- as.character("FRA")
df3$Region <- df3$Category
p <- plot_3set_comparison_WSLS(df1, df2, df3)
source("Model_Plots.R")
archivo <- "../Data/MBiases_simulated.csv"
df1 = read.csv(archivo)
df1$Exp <- as.character("MBiases")
df1$Region <- df1$Category
archivo <- "../Data/WSLS_simulated.csv"
df2 = read.csv(archivo)
df2$Exp <- as.character("WSLS")
df2$Region <- df2$Category
archivo <- "../Data/FRA_simulated.csv"
df3 = read.csv(archivo)
df3$Exp <- as.character("FRA")
df3$Region <- df3$Category
p <- plot_3set_comparison_WSLS(df1, df2, df3)
ggsave("3models.png", width=5, height=4, dpi=600, p)
df1 <- df1[complete.cases(df1), ]
df2 <- df2[complete.cases(df2), ]
df3 <- df3[complete.cases(df3), ]
cor(df1$Consistency, df1$Score_LAG1)
cor(df2$Consistency, df2$Score_LAG1)
cor(df3$Consistency, df3$Score_LAG1)
modelMBiases <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df1)
summary(modelMBiases) # => Positive interaction is significant
# WSLS
modelWSLS <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df2)
summary(modelWSLS) # => Positive interaction is significant
# FRA
modelFRA <- lm(DLIndex ~ Consistency + Dif_consist*Joint_LAG1, data = df3)
summary(modelFRA) # => Positive interaction is significant
setwd("~/Repositorios/SODCL/R")
library(gridExtra)
library(sjmisc)
library(ggplot2)
df1 = read.csv("../Data/humans_only_absent.csv")
head(df1)
# Check the performance on the first round, as if one-shot task
DLIRound60 <- df1$DLIndex[which(df1$Round == 59)]
mean(DLIRound60)
sd(DLIRound60)
n <- length(DLIRound60)
print(paste("Number of trials last round:", n))
DLIRound1 <- df1$DLIndex[which(df1$Round == 1)]
mean(DLIRound1)
sd(DLIRound1)
n <- length(DLIRound1)
print(paste("Number of trials first round:", n))
t.test(DLIRound60, DLIRound1) # => Difference one-shot task vs iterated task is significant
wilcox.test(DLIRound60, DLIRound1) # => Difference one-shot task vs iterated task is significant
t.test(DLIRound60, DLIRound1) # => Difference one-shot task vs iterated task is significant
mean(DLIRound60)
sd(DLIRound60)
n <- length(DLIRound60)
print(paste("Number of trials last round:", n))
DLIRound1 <- df1$DLIndex[which(df1$Round == 1)]
mean(DLIRound1)
sd(DLIRound1)
n <- length(DLIRound1)
print(paste("Number of trials first round:", n))
t.test(DLIRound60, DLIRound1) # => Difference one-shot task vs iterated task is significant
